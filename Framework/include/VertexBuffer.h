//-----------------------------------------------------------------------------
// File : VertexBuffer.h
// Desc : Vertex Buffer Module.
// Copyright(c) Pocol. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include <ComPtr.h>


///////////////////////////////////////////////////////////////////////////////
// VertexBuffer class
///////////////////////////////////////////////////////////////////////////////
class VertexBuffer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    VertexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~VertexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      size            頂点バッファサイズです.
    //! @param[in]      stride          1頂点あたりのサイズです.
    //! @param[in]      pInitData       初期化データです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(
        ID3D12Device*   pDevice,
        size_t          size,
        size_t          stride,
        const void*     pInitData = nullptr);

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      count           頂点数です.
    //! @param[in]      pInitData       初期化データです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    template<typename T>
    bool Init(ID3D12Device* pDevice, size_t count, const T* pInitData = nullptr)
    { return Init(pDevice, sizeof(T) * count, sizeof(T), pInitData ); }

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを行います.
    //-------------------------------------------------------------------------
    void* Map() const;

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを解除します.
    //-------------------------------------------------------------------------
    void Unmap();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを行います.
    //-------------------------------------------------------------------------
    template<typename T>
    T* Map() const
    { return reinterpret_cast<T*>(Map()); }

    //-------------------------------------------------------------------------
    //! @brief      頂点バッファビューを取得します.
    //!
    //! @return     頂点バッファビューを返却します.
    //-------------------------------------------------------------------------
    D3D12_VERTEX_BUFFER_VIEW GetView() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    ComPtr<ID3D12Resource>      m_pVB;      //!< 頂点バッファです.
    D3D12_VERTEX_BUFFER_VIEW    m_View;     //!< 頂点バッファビューです.

    //=========================================================================
    // private methods.
    //=========================================================================
    VertexBuffer    (const VertexBuffer&) = delete;     // アクセス禁止.
    void operator = (const VertexBuffer&) = delete;     // アクセス禁止.
};
