//-----------------------------------------------------------------------------
// File : IndexBuffer.h
// Desc : Index Buffer Module.
// Copyright(c) Pocol. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include <ComPtr.h>
#include <cstdint>


///////////////////////////////////////////////////////////////////////////////
// IndexBuffer class
///////////////////////////////////////////////////////////////////////////////
class IndexBuffer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    IndexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~IndexBuffer();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      count           インデックス数です.
    //! @param[in]      pInitData       初期化データです.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(ID3D12Device* pDevice, size_t count, const uint32_t* pInitData = nullptr);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを行います.
    //-------------------------------------------------------------------------
    uint32_t* Map();

    //-------------------------------------------------------------------------
    //! @brief      メモリマッピングを解除します.
    //-------------------------------------------------------------------------
    void Unmap();

    //-------------------------------------------------------------------------
    //! @brief      インデックスバッファビューを取得します.
    //!
    //! @return     インデックスバッファビューを返却します.
    //-------------------------------------------------------------------------
    D3D12_INDEX_BUFFER_VIEW GetView() const;

    //-------------------------------------------------------------------------
    //! @brief      インデックス数を取得します.
    //!
    //! @return     インデックス数を返却します.
    //-------------------------------------------------------------------------
    size_t GetCount() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    ComPtr<ID3D12Resource>      m_pIB;      //!< インデックスバッファです.
    D3D12_INDEX_BUFFER_VIEW     m_View;     //!< インデックスバッファビューです.
    size_t                      m_Count;    //!< インデックス数です.

    //=========================================================================
    // private methods.
    //=========================================================================
    IndexBuffer     (const IndexBuffer&) = delete;
    void operator = (const IndexBuffer&) = delete;
};
